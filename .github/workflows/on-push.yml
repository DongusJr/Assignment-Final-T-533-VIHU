# This is a basic workflow to help you get started with Actions

name: on-push

# Controls when the workflow will run
on: push

  # Allows you to run this workflow manually from the Actions tab

env:
  IMAGE_NAME: "assignment-final"
  DEP_NAME: "tic-tac-toe-app"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  e2e-test:
    name: 🤖 Cypress run
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/on-push
    
    steps:
      - name: 🔔 Checkout
        uses: actions/checkout@v2
        
      - name: 👷‍♂️ Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      
      - name: ⬇ Download dependancies
        uses: bahmutov/npm-install@v1
        
      - name: 🔹 prisma migrate
        run: npm run prisma:init
    
      - name: 🤖 Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm run start
          wait-on: http://localhost:3000
          wait-on-timeout: 120
          command: npm run test:e2e
          
      - name: 📷🗿 Screenshot artifact
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: 🎬🗿 video artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

  ui-test_unit-test:
    name: 🐙🃏 React-Testing-Library\Jest run
    runs-on: ubuntu-latest
    steps:
      - name: 🔔 Checkout
        uses: actions/checkout@v2

      - name: 👷‍♀️ Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: ⬇ Download dependancies
        uses: bahmutov/npm-install@v1

      - name: 🃏 Run jest
        run: npm run test
      

  # This workflow contains a single job called "build"
  build-push-and-deploy:
    needs: [e2e-test, ui-test_unit-test]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    
    runs-on: ubuntu-latest
    steps:
      - name: 🔔 checkCheckout the repo
        uses: actions/checkout@v2
      
      # Build and push a docker image either to docker hub
      
      - name: 🐳 Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      # Run Migrations
  
      - name: prisma migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DB_CONN_STRING}}
  
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags:  ${{ secrets.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME}}:${{ github.sha }}
          
      # install doctl (digital ocean command line tool), with a digital ocean access token
          
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
      # Updates a deployment file with the correct image

      - name: Replace image and connection string in yaml
        uses: datamonsters/replace-action@v1
        with:
          files: 'deployment.yaml'
          replacements: '$IMAGE=${{ secrets.DOCKERHUB_USERNAME}}/${{env.IMAGE_NAME}}:${{ github.sha }},$DB_CONN_STRING=${{ secrets.DB_CONN_STRING}}'
        
      # Sets the correct kubeconfig
        
      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save $CLUSTER_NAME
        env:
          CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
          
      # Deploys the updated deployment file to that cluster
          
      - name: Deploy Kubernetes
        run: kubectl apply -f deployment.yaml
        
      # Verifies the deployment
      
      - name: Verify deployment
        run: kubectl rollout status deployment/$(echo $DEP_NAME)
