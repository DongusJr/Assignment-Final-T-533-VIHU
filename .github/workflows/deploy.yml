# Old implementation

# name: üö¢ Deploy

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]

# env:
#   IMAGE_NAME: "assignment-final"
#   DEP_NAME: "tic-tac-toe-app"

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build-push-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: üîî checkCheckout the repo
#         uses: actions/checkout@v2
      
#       # Build and push a docker image either to docker hub
      
#       - name: üê≥ Login to DockerHub
#         uses: docker/login-action@v1 
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
    
#       # Run Migrations
  
#       - name: prisma migrations
#         run: npx prisma migrate deploy
#         env:
#           DATABASE_URL: ${{ secrets.DB_CONN_STRING}}
  
#       - name: Build and push
#         uses: docker/build-push-action@v2
#         with:
#           push: true
#           tags:  ${{ secrets.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME}}:${{ github.sha }}
          
#       # install doctl (digital ocean command line tool), with a digital ocean access token
          
#       - name: Install doctl
#         uses: digitalocean/action-doctl@v2
#         with:
#           token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
#       # Updates a deployment file with the correct image

#       - name: Replace image and connection string in yaml
#         uses: datamonsters/replace-action@v1
#         with:
#           files: 'deployment.yaml'
#           replacements: '$IMAGE=${{ secrets.DOCKERHUB_USERNAME}}/${{env.IMAGE_NAME}}:${{ github.sha }},$DB_CONN_STRING=${{ secrets.DB_CONN_STRING}}'
        
#       # Sets the correct kubeconfig
        
#       - name: Save DigitalOcean kubeconfig
#         run: doctl kubernetes cluster kubeconfig save $CLUSTER_NAME
#         env:
#           CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
          
#       # Deploys the updated deployment file to that cluster
          
#       - name: Deploy Kubernetes
#         run: kubectl apply -f deployment.yaml
        
#       # Verifies the deployment
      
#       - name: Verify deployment
#         run: kubectl rollout status deployment/$(echo $DEP_NAME)

# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the $default-branch branch
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
