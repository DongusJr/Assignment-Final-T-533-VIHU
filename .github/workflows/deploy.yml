name: üö¢ Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

env:
  IMAGE_NAME: "assignment-final"
  DEP_NAME: "tic-tac-toe-app"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-push-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: üîî checkCheckout the repo
        uses: actions/checkout@v2
      
      # Build and push a docker image either to docker hub
      
      - name: üê≥ Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      # Run Migrations
  
      - name: prisma migrations
        run: npm run prisma:init
  
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags:  ${{ secrets.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME}}:${{ github.sha }}
          
      # install doctl (digital ocean command line tool), with a digital ocean access token
          
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
      # Updates a deployment file with the correct image

      - name: Replace image and connection string in yaml
        uses: datamonsters/replace-action@v1
        with:
          files: 'deployment.yaml'
          replacements: '$IMAGE=${{ secrets.DOCKERHUB_USERNAME}}/${{env.IMAGE_NAME}}:${{ github.sha }},$DB_CONN_STRING=${{ secrets.DB_CONN_STRING}}'
        
      # Sets the correct kubeconfig
        
      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save $CLUSTER_NAME
        env:
          CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
          
      # Deploys the updated deployment file to that cluster
          
      - name: Deploy Kubernetes
        run: kubectl apply -f deployment.yaml
        
      # Verifies the deployment
      
      - name: Verify deployment
        run: kubectl rollout status deployment/$(echo $DEP_NAME)
